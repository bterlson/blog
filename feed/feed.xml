<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:base="en">
	<title>Brian&#39;s Blog</title>
	<subtitle>Musings on TypeSpec, OpenAPI, API-first, etc.</subtitle>
	<link href="https://blog.trl.sn/feed/feed.xml" rel="self"/>
	<link href="https://blog.trl.sn/"/>
	<updated>2024-04-01T00:00:00Z</updated>
	<id>https://blog.trl.sn</id>
	<author>
		<name>Brian Terlson</name>
		<email>brian.terlson@microsoft.com</email>
	</author>
	
	<entry>
		<title>What even is a JSON Number?</title>
		<link href="https://blog.trl.sn/blog/what-is-a-json-number/"/>
		<updated>2024-04-01T00:00:00Z</updated>
		<id>https://blog.trl.sn/blog/what-is-a-json-number/</id>
		<content type="html">&lt;p&gt;Not a question people generally ponder, and seems fairly straightforward. It&#39;s a number, &lt;em&gt;obviously&lt;/em&gt;! But the question turns out to be somewhat hard to answer, and for API designers especially, the answer is really important to know! So lets explore by diving into the various JSON specifications and implementations. The findings are summarized at the end, so feel free to skip to the bottom if you just want to know the answer and not wade through the exploration.&lt;/p&gt;
&lt;h2&gt;Table of contents&lt;/h2&gt;
&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;table-of-contents&quot;&gt;&lt;ol&gt;&lt;li&gt;&lt;a href=&quot;https://blog.trl.sn/blog/what-is-a-json-number/&quot;&gt;Authoritative sources &lt;/a&gt;&lt;ol&gt;&lt;li&gt;&lt;a href=&quot;https://blog.trl.sn/blog/what-is-a-json-number/&quot;&gt;ECMA-404 &lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://blog.trl.sn/blog/what-is-a-json-number/&quot;&gt;RFC 8259 &lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://blog.trl.sn/blog/what-is-a-json-number/&quot;&gt;RFC 7493 &lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://blog.trl.sn/blog/what-is-a-json-number/&quot;&gt;JSON Schema &amp;amp; OpenAPI &lt;/a&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://blog.trl.sn/blog/what-is-a-json-number/&quot;&gt;JSON numbers in practice &lt;/a&gt;&lt;ol&gt;&lt;li&gt;&lt;a href=&quot;https://blog.trl.sn/blog/what-is-a-json-number/&quot;&gt;Language implementations &lt;/a&gt;&lt;ol&gt;&lt;li&gt;&lt;a href=&quot;https://blog.trl.sn/blog/what-is-a-json-number/&quot;&gt;JavaScript &lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://blog.trl.sn/blog/what-is-a-json-number/&quot;&gt;Python 3.8 &lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://blog.trl.sn/blog/what-is-a-json-number/&quot;&gt;C# (.NET 8, System.Text.JSON) &lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://blog.trl.sn/blog/what-is-a-json-number/&quot;&gt;Java (JDK 11+, Jackson) &lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://blog.trl.sn/blog/what-is-a-json-number/&quot;&gt;Rust (serde) &lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://blog.trl.sn/blog/what-is-a-json-number/&quot;&gt;Go &lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://blog.trl.sn/blog/what-is-a-json-number/&quot;&gt;Summary &lt;/a&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://blog.trl.sn/blog/what-is-a-json-number/&quot;&gt;OpenAPI code generators &lt;/a&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://blog.trl.sn/blog/what-is-a-json-number/&quot;&gt;Summary of findings &lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://blog.trl.sn/blog/what-is-a-json-number/&quot;&gt;Appendix: Test Code &lt;/a&gt;&lt;ol&gt;&lt;li&gt;&lt;a href=&quot;https://blog.trl.sn/blog/what-is-a-json-number/&quot;&gt;JavaScript &lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://blog.trl.sn/blog/what-is-a-json-number/&quot;&gt;C# &lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://blog.trl.sn/blog/what-is-a-json-number/&quot;&gt;Python (3.8) &lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://blog.trl.sn/blog/what-is-a-json-number/&quot;&gt;Java (JDK 21, Jackson) &lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://blog.trl.sn/blog/what-is-a-json-number/&quot;&gt;Rust &lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://blog.trl.sn/blog/what-is-a-json-number/&quot;&gt;Go &lt;/a&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/div&gt;&lt;p&gt;&lt;/p&gt;
&lt;h2 id=&quot;authoritative-sources&quot; tabindex=&quot;-1&quot;&gt;Authoritative sources &lt;a class=&quot;header-anchor&quot; href=&quot;https://blog.trl.sn/blog/what-is-a-json-number/&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;JSON is defined by two primary standards: &lt;a href=&quot;https://ecma-international.org/wp-content/uploads/ECMA-404_2nd_edition_december_2017.pdf&quot;&gt;Ecma-404&lt;/a&gt; and &lt;a href=&quot;https://datatracker.ietf.org/doc/html/rfc8259&quot;&gt;RFC 8259&lt;/a&gt;. Both standards are semantically identical, but RFC 8259 provides some additional recommendations for good interoperability. A related standard, &lt;a href=&quot;https://datatracker.ietf.org/doc/html/rfc7493&quot;&gt;RFC 7493&lt;/a&gt;, describes the closely related Internet JSON format, a restricted profile of JSON which adds a bit more teeth to the recommendations found in RFC 8259. Additionally, in the context of API descriptions, &lt;a href=&quot;https://json-schema.org/draft/2020-12/json-schema-core&quot;&gt;JSON Schema&lt;/a&gt; defines a number data type, which is also normatively referenced by &lt;a href=&quot;https://spec.openapis.org/oas/v3.1.0&quot;&gt;OpenAPI&lt;/a&gt;. Let&#39;s look at each of these specifications for clues.&lt;/p&gt;
&lt;h3 id=&quot;ecma-404&quot; tabindex=&quot;-1&quot;&gt;ECMA-404 &lt;a class=&quot;header-anchor&quot; href=&quot;https://blog.trl.sn/blog/what-is-a-json-number/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;A number is a sequence of decimal digits with no superfluous leading zero. It may have a preceding minus sign (U+002D). It may have a fractional part prefixed by a decimal point (U+002E). It may have an exponent, prefixed by e (U+0065) or E (U+0045) and optionally + (U+002B) or â€“ (U+002D)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;So, a JSON number is a sequence of digits with an optional sign, fractional part, and exponent. The description is purely syntactical.&lt;/p&gt;
&lt;h3 id=&quot;rfc-8259&quot; tabindex=&quot;-1&quot;&gt;RFC 8259 &lt;a class=&quot;header-anchor&quot; href=&quot;https://blog.trl.sn/blog/what-is-a-json-number/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;This specification provides an equivalent ABNF grammar to the railroad diagrams provided by ECMA-404. It also explicitly allows implementations to set limits on the range and precision of numbers accepted&lt;sup class=&quot;footnote-ref&quot;&gt;&lt;a href=&quot;https://blog.trl.sn/blog/what-is-a-json-number/&quot; id=&quot;fnref1&quot;&gt;[1]&lt;/a&gt;&lt;/sup&gt;. It goes on to note:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Since software that implements IEEE 754 binary64 (double precision) numbers is generally available and widely used, good interoperability can be achieved by implementations that expect no more precision or range than these provide&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This is pointing out that some JSON implementations use doubles to store JSON number values. The implementation found in browsers and used by billions of people around the world is one such implementation. So a JSON number will be interoperable if its range and precision fit within a double.&lt;/p&gt;
&lt;h3 id=&quot;rfc-7493&quot; tabindex=&quot;-1&quot;&gt;RFC 7493 &lt;a class=&quot;header-anchor&quot; href=&quot;https://blog.trl.sn/blog/what-is-a-json-number/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;This specification makes RFC 8259&#39;s informative note a normative SHOULD NOT:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;I-JSON messages SHOULD NOT include numbers that express greater magnitude or precision than an IEEE 754 double precision number provides&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;It goes on to recommend that if you need greater range or precision, that you should encode the number as a string.&lt;/p&gt;
&lt;h3 id=&quot;json-schema-and-openapi&quot; tabindex=&quot;-1&quot;&gt;JSON Schema &amp;amp; OpenAPI &lt;a class=&quot;header-anchor&quot; href=&quot;https://blog.trl.sn/blog/what-is-a-json-number/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;JSON Schema describes a number as:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;An arbitrary-precision, base-10 decimal number value, from the JSON &amp;quot;number&amp;quot; value&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;JSON Schema and OpenAPI also define the concept of an integer. JSON schema defines an integer in terms of its value, as a number with a zero fractional part. It also notes that integer values SHOULD NOT be encoded with a fractional part. OpenAPI defines an integer in terms of its syntax, as a JSON number without a fractional part or exponent part.&lt;/p&gt;
&lt;h2 id=&quot;json-numbers-in-practice&quot; tabindex=&quot;-1&quot;&gt;JSON numbers in practice &lt;a class=&quot;header-anchor&quot; href=&quot;https://blog.trl.sn/blog/what-is-a-json-number/&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;RFC 8259 raises the important point that ultimately implementations decide what a JSON number is. Certainly there are limits to range and precision in practice, but what are they? We know that at least one extremely widely deployed implementation is limited to double precision. Are there other interoperability concerns to consider? Let&#39;s investigate by going down two parallel tracks: JSON parsers and serializers across some common languages, and code generators in the OpenAPI ecosystem.&lt;/p&gt;
&lt;h3 id=&quot;language-implementations&quot; tabindex=&quot;-1&quot;&gt;Language implementations &lt;a class=&quot;header-anchor&quot; href=&quot;https://blog.trl.sn/blog/what-is-a-json-number/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Language implementations ultimately decide what a JSON number is, so let&#39;s look at a few examples and check for common patterns. For languages which have configurable serialization/deserialization, only the default behavior is covered.&lt;/p&gt;
&lt;h4 id=&quot;javascript&quot; tabindex=&quot;-1&quot;&gt;JavaScript &lt;a class=&quot;header-anchor&quot; href=&quot;https://blog.trl.sn/blog/what-is-a-json-number/&quot;&gt;#&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;JavaScript&#39;s built-in JSON implementation only works with the built-in &lt;code&gt;Number&lt;/code&gt; type, so all values are limited to the range and precision of a double. Serialization of &lt;code&gt;BigInt&lt;/code&gt; is not supported by default. JavaScript also makes it impossible to preserve a numeric literal exactly when round-tripping, e.g. integers-as-decimals like &lt;code&gt;1.0&lt;/code&gt; will be put back on the wire as &lt;code&gt;1&lt;/code&gt;. There is a &lt;a href=&quot;https://github.com/tc39/proposal-json-parse-with-source&quot;&gt;language proposal&lt;/a&gt; to allow fixing both of these issues without swapping out the entire parser.&lt;/p&gt;
&lt;h4 id=&quot;python-3-8&quot; tabindex=&quot;-1&quot;&gt;Python 3.8 &lt;a class=&quot;header-anchor&quot; href=&quot;https://blog.trl.sn/blog/what-is-a-json-number/&quot;&gt;#&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Integers, decimals, and exponentials are treated differently. Integers can round trip as JSON numbers within the range of -10&lt;sup&gt;4299&lt;/sup&gt; to 10&lt;sup&gt;4299&lt;/sup&gt;&lt;sup class=&quot;footnote-ref&quot;&gt;&lt;a href=&quot;https://blog.trl.sn/blog/what-is-a-json-number/&quot; id=&quot;fnref2&quot;&gt;[2]&lt;/a&gt;&lt;/sup&gt;, while decimals and exponentials use doubles and so are limited to double range and precision. Integers outside the range an &lt;code&gt;int&lt;/code&gt; can be serialized to result in a &lt;code&gt;ValueError&lt;/code&gt;. Exponentials and decimals outside the range of doubles result in &lt;code&gt;inf&lt;/code&gt;. When parsing then serializing exponentials, the exponential formatting is lost.&lt;/p&gt;
&lt;h4 id=&quot;c-net-8-system-text-json&quot; tabindex=&quot;-1&quot;&gt;C# (.NET 8, System.Text.JSON) &lt;a class=&quot;header-anchor&quot; href=&quot;https://blog.trl.sn/blog/what-is-a-json-number/&quot;&gt;#&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;C#&#39;s &lt;code&gt;System.Text.JSON&lt;/code&gt; library is the recommended way to handle JSON data these days, though &lt;code&gt;Newtonsoft.JSON&lt;/code&gt; is also commonly used. We examine the behavior of the former, the latter likely differs.&lt;/p&gt;
&lt;p&gt;C# supports deserializing into appropriate data types through the use of &lt;code&gt;TryGet*&lt;/code&gt; APIs. Using this API, it is possible to deserialize integer types losslessly up to &lt;code&gt;int64&lt;/code&gt; and somewhat larger integers into a &lt;code&gt;decimal&lt;/code&gt;. &lt;code&gt;decimal&lt;/code&gt; can also be used to represent decimal values, potentially with precision loss. If you know the schema in advance, you can add support for deserializing into other data types, like &lt;code&gt;BigInteger&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;C# also supports getting the raw text of the literal which allows for custom handling and round-tripping of arbitrary literals without precision loss.&lt;/p&gt;
&lt;h4 id=&quot;java-jdk-11-jackson&quot; tabindex=&quot;-1&quot;&gt;Java (JDK 11+, Jackson) &lt;a class=&quot;header-anchor&quot; href=&quot;https://blog.trl.sn/blog/what-is-a-json-number/&quot;&gt;#&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Java typically uses the &lt;code&gt;Jackson&lt;/code&gt; library to handle JSON serialization and deserialization. &lt;code&gt;Jackson&lt;/code&gt; allows serialization and deserialization into any Java numeric type, including &lt;code&gt;BigDecimal&lt;/code&gt;, allowing it to represent numeric literals of any range and precision without precision loss.&lt;/p&gt;
&lt;h4 id=&quot;rust-serde&quot; tabindex=&quot;-1&quot;&gt;Rust (serde) &lt;a class=&quot;header-anchor&quot; href=&quot;https://blog.trl.sn/blog/what-is-a-json-number/&quot;&gt;#&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Rust&#39;s &lt;code&gt;serde_json&lt;/code&gt; crate is commonly used for JSON serialization and deserialization. It supports deserialization of integer values that fit within the range of an &lt;code&gt;i64&lt;/code&gt;/&lt;code&gt;u64&lt;/code&gt;. It also supports deserialization of integer and decimal values that fit within the range of an &lt;code&gt;f64&lt;/code&gt;, though doing so may result in precision loss. Integers and decimals outside the range of an &lt;code&gt;f64&lt;/code&gt; result in an error. Exponentials are always deserialized as doubles. However, &lt;code&gt;serde&lt;/code&gt; has a &lt;code&gt;arbitrary_precision&lt;/code&gt; configuration flag that can be used to round-trip arbitrary numeric values without precision loss assuming they are not deserialized in a lossy fashion. Support for deseralizing into other data types can be added with some additional code, but requires knowing the schema of the data.&lt;/p&gt;
&lt;h4 id=&quot;go&quot; tabindex=&quot;-1&quot;&gt;Go &lt;a class=&quot;header-anchor&quot; href=&quot;https://blog.trl.sn/blog/what-is-a-json-number/&quot;&gt;#&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Go&#39;s &lt;code&gt;encoding/json&lt;/code&gt; library is capable of dynamically unmarshalling JSON number literals using the&lt;code&gt;float64&lt;/code&gt; type. If you know the schema in advance, you can parse known integers into an appropriate integer type up to &lt;code&gt;int64&lt;/code&gt;, and parse decimals into a &lt;code&gt;float32&lt;/code&gt; type as appropriate. Support for unmarshalling e.g. decimal types or big integers can be added with some additional code, but also requires knowing the schema of the data.&lt;/p&gt;
&lt;p&gt;Go can be instructed to deserialize number literals into strings, allowing for custom handling and round-tripping of arbitrary literals without precision loss.&lt;/p&gt;
&lt;h4 id=&quot;summary&quot; tabindex=&quot;-1&quot;&gt;Summary &lt;a class=&quot;header-anchor&quot; href=&quot;https://blog.trl.sn/blog/what-is-a-json-number/&quot;&gt;#&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;To summarize the behavior of the various implementations, we can examine their behavior with the following values:&lt;/p&gt;
&lt;style&gt;
  #literal-table tr td:nth-child(1), #literal-table tr th:nth-child(1) {
    text-align: right;
  }
&lt;/style&gt;
&lt;div id=&quot;literal-table&quot;&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Number literal&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;10&lt;/td&gt;
&lt;td&gt;Small integer&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1000000000&lt;/td&gt;
&lt;td&gt;Medium integer: beyond int32 range, within int64 range&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;10000000000000001&lt;/td&gt;
&lt;td&gt;Large integer: beyond double range, within int64 range&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;100000000000000000001&lt;/td&gt;
&lt;td&gt;Huge integer: beyond the range of an int64&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1[309 zeros]&lt;/td&gt;
&lt;td&gt;Ridonculous integer: beyond the range of a decimal128&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;10.0&lt;/td&gt;
&lt;td&gt;Low-precision decimal&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;10000000000000001.1&lt;/td&gt;
&lt;td&gt;High-precision decimal: precision &amp;gt; double&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1.[34 ones]&lt;/td&gt;
&lt;td&gt;Ridonculous-precision decimal: precision &amp;gt; decimal128&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1E2&lt;/td&gt;
&lt;td&gt;Small expontential&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1E309&lt;/td&gt;
&lt;td&gt;Large exponential: beyond the range of a float&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;p&gt;The following table shows the data type used to represent the literal in each language. Cells colored with grey are errors. Cells colored with red are non-errors with precision loss. Only the default serialization behavior is covered here. It may be possible to code defensively against these kinds of errors by configuring the serializer or through other mechanisms. Additionally, the test code I used attempts to use a dynamic/schemaless parsing path if it is available. For some languages, knowing the schema in advance can result in better behavior. The test code can be found in the appendix.&lt;/p&gt;
&lt;style&gt;
  #lrt tr td:nth-child(1), #lrt tr th:nth-child(1) {
    text-align: right;
  }

  #lrt tr:nth-child(3) td:nth-child(2),
  #lrt tr:nth-child(4) td:nth-child(2),
  #lrt tr:nth-child(5) td:nth-child(2),
  #lrt tr:nth-child(7) td:nth-child(2),
  #lrt tr:nth-child(8) td:nth-child(2),
  #lrt tr:nth-child(10) td:nth-child(2),

  #lrt tr:nth-child(8) td:nth-child(3),

  #lrt tr:nth-child(7) td:nth-child(4),
  #lrt tr:nth-child(8) td:nth-child(4),
  #lrt tr:nth-child(10) td:nth-child(4),

  #lrt tr:nth-child(3) td:nth-child(6),
  #lrt tr:nth-child(4) td:nth-child(6),
  #lrt tr:nth-child(5) td:nth-child(6),
  #lrt tr:nth-child(7) td:nth-child(6),
  #lrt tr:nth-child(8) td:nth-child(6),

  #lrt tr:nth-child(4) td:nth-child(7),
  #lrt tr:nth-child(7) td:nth-child(7),
  #lrt tr:nth-child(8) td:nth-child(7)
  {
    background-color: #f99;
  }

  #lrt tr:nth-child(5) td:nth-child(3),
  #lrt tr:nth-child(10) td:nth-child(3),
  
  #lrt tr:nth-child(5) td:nth-child(6),
  #lrt tr:nth-child(10) td:nth-child(6),

  #lrt tr:nth-child(5) td:nth-child(7),
  #lrt tr:nth-child(10) td:nth-child(7)
  {
    background-color: #ccc;
  }
&lt;/style&gt;
&lt;div id=&quot;lrt&quot;&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Literal&lt;/th&gt;
&lt;th&gt;JavaScript&lt;/th&gt;
&lt;th&gt;C#&lt;/th&gt;
&lt;th&gt;Python&lt;/th&gt;
&lt;th&gt;Java&lt;/th&gt;
&lt;th&gt;Go&lt;/th&gt;
&lt;th&gt;Rust&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Small integer&lt;/td&gt;
&lt;td&gt;Number&lt;/td&gt;
&lt;td&gt;int16&lt;/td&gt;
&lt;td&gt;int&lt;/td&gt;
&lt;td&gt;int&lt;/td&gt;
&lt;td&gt;float64&lt;/td&gt;
&lt;td&gt;i8&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Medium integer&lt;/td&gt;
&lt;td&gt;Number&lt;/td&gt;
&lt;td&gt;int64&lt;/td&gt;
&lt;td&gt;int&lt;/td&gt;
&lt;td&gt;long&lt;/td&gt;
&lt;td&gt;float64&lt;/td&gt;
&lt;td&gt;i64&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Large integer&lt;/td&gt;
&lt;td&gt;Number&lt;/td&gt;
&lt;td&gt;int64&lt;/td&gt;
&lt;td&gt;int&lt;/td&gt;
&lt;td&gt;long&lt;/td&gt;
&lt;td&gt;float64&lt;/td&gt;
&lt;td&gt;i64&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Huge integer&lt;/td&gt;
&lt;td&gt;Number&lt;/td&gt;
&lt;td&gt;decimal&lt;/td&gt;
&lt;td&gt;int&lt;/td&gt;
&lt;td&gt;BigInteger&lt;/td&gt;
&lt;td&gt;float64&lt;/td&gt;
&lt;td&gt;f64&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Ridonculous integer&lt;/td&gt;
&lt;td&gt;Number&lt;/td&gt;
&lt;td&gt;error&lt;/td&gt;
&lt;td&gt;int&lt;/td&gt;
&lt;td&gt;BigInteger&lt;/td&gt;
&lt;td&gt;error&lt;/td&gt;
&lt;td&gt;error&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Low-precision decimal&lt;/td&gt;
&lt;td&gt;Number&lt;/td&gt;
&lt;td&gt;decimal&lt;/td&gt;
&lt;td&gt;double&lt;/td&gt;
&lt;td&gt;float&lt;/td&gt;
&lt;td&gt;float64&lt;/td&gt;
&lt;td&gt;f64&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;High-precision decimal&lt;/td&gt;
&lt;td&gt;Number&lt;/td&gt;
&lt;td&gt;decimal&lt;/td&gt;
&lt;td&gt;double&lt;/td&gt;
&lt;td&gt;BigDecimal&lt;/td&gt;
&lt;td&gt;float64&lt;/td&gt;
&lt;td&gt;f64&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Ridonculous-precision decimal&lt;/td&gt;
&lt;td&gt;Number&lt;/td&gt;
&lt;td&gt;decimal&lt;/td&gt;
&lt;td&gt;double&lt;/td&gt;
&lt;td&gt;BigDecimal&lt;/td&gt;
&lt;td&gt;float64&lt;/td&gt;
&lt;td&gt;f64&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Small exponential&lt;/td&gt;
&lt;td&gt;Number&lt;/td&gt;
&lt;td&gt;decimal&lt;/td&gt;
&lt;td&gt;double&lt;/td&gt;
&lt;td&gt;float&lt;/td&gt;
&lt;td&gt;float64&lt;/td&gt;
&lt;td&gt;f64&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Large exponential&lt;/td&gt;
&lt;td&gt;Number&lt;/td&gt;
&lt;td&gt;error&lt;/td&gt;
&lt;td&gt;double&lt;/td&gt;
&lt;td&gt;BigDecimal&lt;/td&gt;
&lt;td&gt;error&lt;/td&gt;
&lt;td&gt;error&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;p&gt;Notes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;C#&lt;/strong&gt;: The test code attempts to deserialize into the smallest supported int &lt;code&gt;int16&lt;/code&gt;, then &lt;code&gt;int64&lt;/code&gt;, then &lt;code&gt;decimal&lt;/code&gt;. No attempt is made to deserialize into a &lt;code&gt;double&lt;/code&gt; at this point, since it would only have the value of &lt;code&gt;+/- Infinity&lt;/code&gt;. Also note that &lt;code&gt;decimal&lt;/code&gt; is not an IEEE &lt;code&gt;decimal128&lt;/code&gt; - the former has 28-29 significant digits, whereas &lt;code&gt;decimal128&lt;/code&gt; has 34.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Rust&lt;/strong&gt;: The type in this column represents the smallest possible type the value will deserialize into without error. If you know the schema in advance, you can make trivially make the huge integer case an error to avoid precision loss.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Go&lt;/strong&gt;: You can serialize into integer types if you know the schema of the data and can ask the unmarshaller to give you an int64. The table represents the best you can do if you don&#39;t know the schema in advance. If you know the schema, you can handle the large integer case without precision loss, and also make the huge integer case an error.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;openapi-code-generators&quot; tabindex=&quot;-1&quot;&gt;OpenAPI code generators &lt;a class=&quot;header-anchor&quot; href=&quot;https://blog.trl.sn/blog/what-is-a-json-number/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;In the context of JSON APIs, an argument could be made that OpenAPI and its ecosystem of code generators matter as much as the parsers found in various implementations. Even if a language&#39;s JSON parser is capable of parsing a number literal of a particular size, it&#39;s possible OpenAPI&#39;s signatures could be more or less restrictive, especially for strongly typed languages.&lt;/p&gt;
&lt;p&gt;In order to understand how the various languages behave, we will test with numeric types and formats defined in the OpenAPI 3 spec itself, as well as the numeric formats defined in the &lt;a href=&quot;https://spec.openapis.org/registry/format/&quot;&gt;OpenAPI Format Registry&lt;/a&gt;:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;th&gt;Format&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;number&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;Arbitrary-precision, base-10 decimal number value&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;integer&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;JSON number without a fraction or exponent part&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;number&lt;/td&gt;
&lt;td&gt;float&lt;/td&gt;
&lt;td&gt;Single precision floating point number&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;number&lt;/td&gt;
&lt;td&gt;double&lt;/td&gt;
&lt;td&gt;Double precision floating point number&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;number&lt;/td&gt;
&lt;td&gt;decimal&lt;/td&gt;
&lt;td&gt;Fixed point decimal number of unspecified precision and range&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;number&lt;/td&gt;
&lt;td&gt;decimal128&lt;/td&gt;
&lt;td&gt;Decimal floating-point number with 34 significant decimal digits&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;integer&lt;/td&gt;
&lt;td&gt;int8&lt;/td&gt;
&lt;td&gt;Signed 8-bit integer&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;integer&lt;/td&gt;
&lt;td&gt;uint8&lt;/td&gt;
&lt;td&gt;Unsigned 8-bit integer&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;integer&lt;/td&gt;
&lt;td&gt;int16&lt;/td&gt;
&lt;td&gt;Signed 16-bit integer&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;integer&lt;/td&gt;
&lt;td&gt;int32&lt;/td&gt;
&lt;td&gt;Signed 32-bit integer&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;integer&lt;/td&gt;
&lt;td&gt;int64&lt;/td&gt;
&lt;td&gt;Signed 64-bit integer&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Unsigned ints other than &lt;code&gt;uint8&lt;/code&gt; are not defined in either OpenAPI or the format registry. &lt;code&gt;double-int&lt;/code&gt; was recently added&lt;sup class=&quot;footnote-ref&quot;&gt;&lt;a href=&quot;https://blog.trl.sn/blog/what-is-a-json-number/&quot; id=&quot;fnref3&quot;&gt;[3]&lt;/a&gt;&lt;/sup&gt; and is unlikely to be supported anywhere.&lt;/p&gt;
&lt;p&gt;The table below summarizes the output for each language using the &lt;a href=&quot;https://openapi-generator.tech/&quot;&gt;OpenAPI-Generator&lt;/a&gt; code generators. Cells higlighted in red show cases where the generated code creates a situation where either precision loss or an error may occur when providing certain values in OpenAPI&#39;s spec-defined range and precision.&lt;/p&gt;
&lt;style&gt;
#result-table tr:nth-child(1) td:nth-child(2),
#result-table tr:nth-child(2) td:nth-child(2),
#result-table tr:nth-child(8) td:nth-child(2),
#result-table tr:nth-child(11) td:nth-child(2),
#result-table tr:nth-child(12) td:nth-child(2),

#result-table tr:nth-child(1) td:nth-child(3),
#result-table tr:nth-child(2) td:nth-child(3),
#result-table tr:nth-child(7) td:nth-child(3),
#result-table tr:nth-child(11) td:nth-child(3),

#result-table tr:nth-child(1) td:nth-child(4),
#result-table tr:nth-child(12) td:nth-child(4),
#result-table tr:nth-child(11) td:nth-child(4),
#result-table tr:nth-child(12) td:nth-child(4),

#result-table tr:nth-child(2) td:nth-child(5),
#result-table tr:nth-child(7) td:nth-child(5),

#result-table tr:nth-child(1) td:nth-child(6),
#result-table tr:nth-child(2) td:nth-child(6),
#result-table tr:nth-child(7) td:nth-child(6),
#result-table tr:nth-child(11) td:nth-child(6),
#result-table tr:nth-child(12) td:nth-child(6),

#result-table tr:nth-child(1) td:nth-child(7),
#result-table tr:nth-child(2) td:nth-child(7),
#result-table tr:nth-child(7) td:nth-child(7),
#result-table tr:nth-child(11) td:nth-child(7),
#result-table tr:nth-child(12) td:nth-child(7)
{
  background-color: #f99;
}
&lt;/style&gt;
&lt;div id=&quot;result-table&quot;&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;OpenAPI&lt;/th&gt;
&lt;th&gt;JavaScript&lt;/th&gt;
&lt;th&gt;C#&lt;/th&gt;
&lt;th&gt;Python&lt;/th&gt;
&lt;th&gt;Java&lt;/th&gt;
&lt;th&gt;Go&lt;/th&gt;
&lt;th&gt;Rust&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;number&lt;/td&gt;
&lt;td&gt;number&lt;/td&gt;
&lt;td&gt;decimal128&lt;/td&gt;
&lt;td&gt;int, float&lt;/td&gt;
&lt;td&gt;BigDecimal&lt;/td&gt;
&lt;td&gt;float32&lt;/td&gt;
&lt;td&gt;f32&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;integer&lt;/td&gt;
&lt;td&gt;number&lt;/td&gt;
&lt;td&gt;int32&lt;/td&gt;
&lt;td&gt;int&lt;/td&gt;
&lt;td&gt;Integer&lt;/td&gt;
&lt;td&gt;int32&lt;/td&gt;
&lt;td&gt;i32&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;int8&lt;/td&gt;
&lt;td&gt;number&lt;/td&gt;
&lt;td&gt;int32&lt;/td&gt;
&lt;td&gt;int&lt;/td&gt;
&lt;td&gt;Integer&lt;/td&gt;
&lt;td&gt;int32&lt;/td&gt;
&lt;td&gt;i32&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;uint8&lt;/td&gt;
&lt;td&gt;number&lt;/td&gt;
&lt;td&gt;int32&lt;/td&gt;
&lt;td&gt;int&lt;/td&gt;
&lt;td&gt;Integer&lt;/td&gt;
&lt;td&gt;int32&lt;/td&gt;
&lt;td&gt;i32&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;int16&lt;/td&gt;
&lt;td&gt;number&lt;/td&gt;
&lt;td&gt;int32&lt;/td&gt;
&lt;td&gt;int&lt;/td&gt;
&lt;td&gt;Integer&lt;/td&gt;
&lt;td&gt;int32&lt;/td&gt;
&lt;td&gt;i32&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;int32&lt;/td&gt;
&lt;td&gt;number&lt;/td&gt;
&lt;td&gt;int32&lt;/td&gt;
&lt;td&gt;int&lt;/td&gt;
&lt;td&gt;Integer&lt;/td&gt;
&lt;td&gt;int32&lt;/td&gt;
&lt;td&gt;i32&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;double-int&lt;/td&gt;
&lt;td&gt;number&lt;/td&gt;
&lt;td&gt;int32&lt;/td&gt;
&lt;td&gt;int&lt;/td&gt;
&lt;td&gt;Integer&lt;/td&gt;
&lt;td&gt;int32&lt;/td&gt;
&lt;td&gt;i32&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;int64&lt;/td&gt;
&lt;td&gt;number&lt;/td&gt;
&lt;td&gt;int64&lt;/td&gt;
&lt;td&gt;int&lt;/td&gt;
&lt;td&gt;Long&lt;/td&gt;
&lt;td&gt;int64&lt;/td&gt;
&lt;td&gt;i64&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;single&lt;/td&gt;
&lt;td&gt;number&lt;/td&gt;
&lt;td&gt;float&lt;/td&gt;
&lt;td&gt;int, float&lt;/td&gt;
&lt;td&gt;Float&lt;/td&gt;
&lt;td&gt;float32&lt;/td&gt;
&lt;td&gt;f32&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;double&lt;/td&gt;
&lt;td&gt;number&lt;/td&gt;
&lt;td&gt;double&lt;/td&gt;
&lt;td&gt;int, float&lt;/td&gt;
&lt;td&gt;Double&lt;/td&gt;
&lt;td&gt;float64&lt;/td&gt;
&lt;td&gt;f64&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;decimal&lt;/td&gt;
&lt;td&gt;number&lt;/td&gt;
&lt;td&gt;decimal128&lt;/td&gt;
&lt;td&gt;int, float&lt;/td&gt;
&lt;td&gt;BigDecimal&lt;/td&gt;
&lt;td&gt;float32&lt;/td&gt;
&lt;td&gt;f32&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;decimal128&lt;/td&gt;
&lt;td&gt;number&lt;/td&gt;
&lt;td&gt;decimal128&lt;/td&gt;
&lt;td&gt;int, float&lt;/td&gt;
&lt;td&gt;BigDecimal&lt;/td&gt;
&lt;td&gt;float32&lt;/td&gt;
&lt;td&gt;f32&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;p&gt;From this we can see that the OpenAPI-generator suite considers an &lt;code&gt;integer&lt;/code&gt; to be an int32, despite the spec suggesting it has arbitrary range. As such, when using these tools, there seems to be no way to define an arbitrary-length integer across all languages that have a corresponding data type. Moreover, &lt;code&gt;number&lt;/code&gt; is often understood as a 32-bit &lt;code&gt;float&lt;/code&gt; despite the spec suggesting it has arbitrary range and precision.&lt;/p&gt;
&lt;h2 id=&quot;summary-of-findings&quot; tabindex=&quot;-1&quot;&gt;Summary of findings &lt;a class=&quot;header-anchor&quot; href=&quot;https://blog.trl.sn/blog/what-is-a-json-number/&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Let&#39;s answer the question then: what is a JSON number?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;According to the authoritative specs, a numeric literal of any length and precision.&lt;/li&gt;
&lt;li&gt;According to an interoperable profile of JSON, a numeric literal with the length and precision of a double.&lt;/li&gt;
&lt;li&gt;According to various JSON implementations, a numeric literal with constraints that differ wildly depending on the implementation.&lt;/li&gt;
&lt;li&gt;According to OpenAPI, either:
&lt;ul&gt;
&lt;li&gt;An integer of any length&lt;/li&gt;
&lt;li&gt;A decimal value of any length and precision&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;According to OpenAPI code generators,
&lt;ul&gt;
&lt;li&gt;Without a format, either:
&lt;ul&gt;
&lt;li&gt;For &lt;code&gt;number&lt;/code&gt;, some floating point representation as small as float32&lt;/li&gt;
&lt;li&gt;For &lt;code&gt;integer&lt;/code&gt;, an int32&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;With a format, either:
&lt;ul&gt;
&lt;li&gt;the closest data type approximating the specified format in that language&lt;/li&gt;
&lt;li&gt;&lt;code&gt;int32&lt;/code&gt; or its closest approximation if the format is not supported.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We have also confirmed that interoperability of numbers outside the range of a double is spotty. All implementations tested can transact numbers inside the double range safely. All implementations except JavaScript can transact integer literals within the range of an &lt;code&gt;int64&lt;/code&gt;&lt;sup class=&quot;footnote-ref&quot;&gt;&lt;a href=&quot;https://blog.trl.sn/blog/what-is-a-json-number/&quot; id=&quot;fnref4&quot;&gt;[4]&lt;/a&gt;&lt;/sup&gt; (though go requires knowing the schema in advance).&lt;/p&gt;
&lt;p&gt;For those using OpenAPI, we can infer some best practices for defining APIs that use numbers:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Always specify a format in OpenAPI. Neither &lt;code&gt;integer&lt;/code&gt; or &lt;code&gt;number&lt;/code&gt; is likely to do what you want.&lt;/li&gt;
&lt;li&gt;Avoid &lt;code&gt;double-int&lt;/code&gt;. It&#39;s not supported and results in potential errors or data loss in many languages.&lt;/li&gt;
&lt;li&gt;Avoid &lt;code&gt;decimal&lt;/code&gt; and &lt;code&gt;decimal128&lt;/code&gt;. They are also not widely supported.&lt;/li&gt;
&lt;li&gt;Avoid &lt;code&gt;int64&lt;/code&gt; with a &lt;code&gt;number&lt;/code&gt; type if you have JavaScript consumers. Use with the &lt;code&gt;string&lt;/code&gt; type instead.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you&#39;re using TypeSpec, this advice can be summed up as:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Avoid using &lt;code&gt;decimal&lt;/code&gt;, &lt;code&gt;decimal128&lt;/code&gt;, &lt;code&gt;integer&lt;/code&gt;, and &lt;code&gt;numeric&lt;/code&gt; types.&lt;/li&gt;
&lt;li&gt;If you use &lt;code&gt;int64&lt;/code&gt; and you have JavaScript consumers, encode it as a string via &lt;code&gt;@encode(&amp;quot;int64&amp;quot;, string)&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Finally, due to some languages handling numeric literals with exponential and decimal parts differently, implementations should preserve the format when round tripping (e.g. &lt;code&gt;10.0&lt;/code&gt; should be put back as &lt;code&gt;10.0&lt;/code&gt;).&lt;/p&gt;
&lt;h2 id=&quot;appendix-test-code&quot; tabindex=&quot;-1&quot;&gt;Appendix: Test Code &lt;a class=&quot;header-anchor&quot; href=&quot;https://blog.trl.sn/blog/what-is-a-json-number/&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;This code is garbage, LLMs were heavily involved in their creation. The output needs some interpretation. Feel free to &lt;a href=&quot;https://github.com/bterlson/blog/blob/main/content/blog/what-is-a-json-number.md&quot;&gt;suggest improvements on GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&quot;javascript-1&quot; tabindex=&quot;-1&quot;&gt;JavaScript &lt;a class=&quot;header-anchor&quot; href=&quot;https://blog.trl.sn/blog/what-is-a-json-number/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;pre class=&quot;shiki rose-pine-dawn&quot; style=&quot;background-color:#faf4ed;color:#575279&quot; tabindex=&quot;0&quot;&gt;&lt;code&gt;&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;const&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; jsonValues&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; =&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt; [&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;	&quot;10&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;	&quot;1000000000&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;	&quot;10000000000000001&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;	&quot;100000000000000000001&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;	&quot;1&quot;&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; +&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt; &quot;0&quot;&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;repeat&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;309&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;	&quot;10.0&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;	&quot;10000000000000001.1&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;	&quot;1.1111111111111111111111111111111111&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;	&quot;1E2&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;	&quot;1E309&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#575279&quot;&gt;]&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;for&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt; (&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;const&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; jsonValue&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; of&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; jsonValues&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;) &lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;{&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;	console&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;log&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;`Testing JSON value: &lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;${&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;jsonValue&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;}&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;`&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;	try&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt; {&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#797593;font-style:italic&quot;&gt;		//&lt;/span&gt;&lt;span style=&quot;color:#9893A5;font-style:italic&quot;&gt; Deserialize the JSON value&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;		const&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; deserialized&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; =&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; JSON&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;parse&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;jsonValue&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;		if&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt; (&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;String&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;deserialized&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;) &lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;!==&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; jsonValue&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;) &lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;{&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;			console&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;log&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&quot;precision loss detected&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; jsonValue&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; deserialized&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#797593&quot;&gt;		}&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;		const&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; serialized&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; =&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; JSON&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;stringify&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;deserialized&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;		if&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt; (&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;jsonValue&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; !==&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; serialized&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;) &lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;{&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;			console&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;log&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&quot;round-trip error detected&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; jsonValue&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; serialized&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#797593&quot;&gt;		}&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#797593&quot;&gt;	}&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; catch&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt; (&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;error&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;) &lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;{&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;		console&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;log&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;`Deserialization error: &lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;${&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;error&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;message&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;}&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;`&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#797593&quot;&gt;	}&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;	console&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;log&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;()&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#797593&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&quot;c&quot; tabindex=&quot;-1&quot;&gt;C# &lt;a class=&quot;header-anchor&quot; href=&quot;https://blog.trl.sn/blog/what-is-a-json-number/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;pre class=&quot;shiki rose-pine-dawn&quot; style=&quot;background-color:#faf4ed;color:#575279&quot; tabindex=&quot;0&quot;&gt;&lt;code&gt;&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;using&lt;/span&gt;&lt;span style=&quot;color:#56949F&quot;&gt; System&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;using&lt;/span&gt;&lt;span style=&quot;color:#56949F&quot;&gt; System&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#56949F&quot;&gt;Text&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#56949F&quot;&gt;Json&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;class&lt;/span&gt;&lt;span style=&quot;color:#56949F&quot;&gt; Program&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#797593&quot;&gt;{&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;    static&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; void&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt; Main&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;()&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#797593&quot;&gt;    {&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;        string&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;[]&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt; jsonValues&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; =&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt; {&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;            &quot;10&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;            &quot;1000000000&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;            &quot;10000000000000001&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;            &quot;100000000000000000001&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;            &quot;1&quot;&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; +&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; new&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; string&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;&#39;&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;0&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;&#39;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt; 309&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;),&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;            &quot;10.0&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;            &quot;10000000000000001.1&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;            &quot;1.1111111111111111111111111111111111&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;            &quot;1E2&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;            &quot;1E309&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#797593&quot;&gt;        };&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;        foreach&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt; (&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;string&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt; jsonValue&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; in&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; jsonValues&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#797593&quot;&gt;        {&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;            Console&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;WriteLine&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;$&quot;Testing JSON value: &lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;{&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;jsonValue&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;}&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;);&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;            try&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#797593&quot;&gt;            {&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#797593;font-style:italic&quot;&gt;                //&lt;/span&gt;&lt;span style=&quot;color:#9893A5;font-style:italic&quot;&gt; Deserialize the JSON value&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#56949F&quot;&gt;                JsonElement&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt; deserialized&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; =&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; JsonSerializer&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;Deserialize&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;&amp;#x3C;&lt;/span&gt;&lt;span style=&quot;color:#56949F&quot;&gt;JsonElement&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;jsonValue&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;);&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#797593;font-style:italic&quot;&gt;                //&lt;/span&gt;&lt;span style=&quot;color:#9893A5;font-style:italic&quot;&gt; Check the deserialized type and precision loss&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;                switch&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt; (&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;deserialized&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;ValueKind&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#797593&quot;&gt;                {&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;                    case&lt;/span&gt;&lt;span style=&quot;color:#56949F&quot;&gt; JsonValueKind&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#56949F&quot;&gt;Number&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;:&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;						if&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt; (&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;deserialized&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;TryGetInt16&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;out&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; short&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt; smallValue&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;))&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#797593&quot;&gt;                        {&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;                            Console&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;WriteLine&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&quot;Deserialized as: short&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;);&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#797593&quot;&gt;                        }&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;                        else&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; if&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt; (&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;deserialized&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;TryGetInt64&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;out&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; long&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt; longValue&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;))&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#797593&quot;&gt;                        {&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;                            Console&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;WriteLine&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&quot;Deserialized as: long&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;);&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#797593&quot;&gt;                        }&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;                        else&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; if&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt; (&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;deserialized&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;TryGetDecimal&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;out&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; decimal&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt; decimalValue&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;))&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#797593&quot;&gt;                        {&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;                            Console&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;WriteLine&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&quot;Deserialized as: decimal&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;);&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;                            string&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt; deserializedString&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; =&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; decimalValue&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;ToString&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&quot;G29&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;);&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;                            if&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt; (&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;deserializedString&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; !=&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; jsonValue&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#797593&quot;&gt;                            {&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;                                Console&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;WriteLine&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&quot;Precision loss detected!&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;);&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;                                Console&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;WriteLine&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;$&quot;Original value: &lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;{&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;jsonValue&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;}&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;);&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;                                Console&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;WriteLine&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;$&quot;Deserialized value: &lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;{&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;deserializedString&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;}&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;);&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#797593&quot;&gt;                            }&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#797593&quot;&gt;                        }&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;                        else&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#797593&quot;&gt;                        {&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;                            Console&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;WriteLine&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&quot;Deserialized as: unknown number&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;);&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#797593&quot;&gt;                        }&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;                        break&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;                    default&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;:&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;                        Console&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;WriteLine&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;$&quot;Deserialized as: &lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;{&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;deserialized&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;ValueKind&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;}&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;);&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;                        break&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#797593&quot;&gt;                }&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#797593;font-style:italic&quot;&gt;                //&lt;/span&gt;&lt;span style=&quot;color:#9893A5;font-style:italic&quot;&gt; Serialize the value back to JSON&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;                string&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt; serialized&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; =&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; JsonSerializer&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;Serialize&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;deserialized&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;);&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#797593;font-style:italic&quot;&gt;                //&lt;/span&gt;&lt;span style=&quot;color:#9893A5;font-style:italic&quot;&gt; Check if the serialized value matches the original JSON value&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;                if&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt; (&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;serialized&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; !=&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; jsonValue&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#797593&quot;&gt;                {&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;                    Console&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;WriteLine&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&quot;Round-tripping error detected!&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;);&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;                    Console&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;WriteLine&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;$&quot;Original: &lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;{&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;jsonValue&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;}&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;);&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;                    Console&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;WriteLine&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;$&quot;Serialized: &lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;{&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;serialized&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;}&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;);&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#797593&quot;&gt;                }&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#797593&quot;&gt;            }&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;            catch&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt; (&lt;/span&gt;&lt;span style=&quot;color:#56949F&quot;&gt;JsonException&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt; ex&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#797593&quot;&gt;            {&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;                Console&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;WriteLine&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;$&quot;Deserialization error: &lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;{&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;ex&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;Message&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;}&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;);&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#797593&quot;&gt;            }&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;            Console&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;WriteLine&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;();&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#797593&quot;&gt;        }&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#797593&quot;&gt;    }&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#797593&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&quot;python-3-8-1&quot; tabindex=&quot;-1&quot;&gt;Python (3.8) &lt;a class=&quot;header-anchor&quot; href=&quot;https://blog.trl.sn/blog/what-is-a-json-number/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;pre class=&quot;shiki rose-pine-dawn&quot; style=&quot;background-color:#faf4ed;color:#575279&quot; tabindex=&quot;0&quot;&gt;&lt;code&gt;&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;import&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt; json&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;import&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt; decimal&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;def&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt; test_json_number&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#907AA9;font-style:italic&quot;&gt;number_literal&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;):&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#B4637A;font-style:italic&quot;&gt;    print&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;f&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&quot;Testing number literal: &lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;{&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;number_literal&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;}&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#797593;font-style:italic&quot;&gt;    #&lt;/span&gt;&lt;span style=&quot;color:#9893A5;font-style:italic&quot;&gt; Deserialize the JSON number&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#575279&quot;&gt;    deserialized &lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt; json&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;loads&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;number_literal&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#797593;font-style:italic&quot;&gt;    #&lt;/span&gt;&lt;span style=&quot;color:#9893A5;font-style:italic&quot;&gt; Check for precision loss during deserialization&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;    if&lt;/span&gt;&lt;span style=&quot;color:#56949F&quot;&gt; str&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;deserialized&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; !=&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt; number_literal&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;:&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#B4637A;font-style:italic&quot;&gt;        print&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&quot;  Precision loss during deserialization&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;    else&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;:&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#B4637A;font-style:italic&quot;&gt;        print&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&quot;  No precision loss during deserialization&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#797593;font-style:italic&quot;&gt;    #&lt;/span&gt;&lt;span style=&quot;color:#9893A5;font-style:italic&quot;&gt; Serialize the deserialized number back to JSON&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#575279&quot;&gt;    serialized &lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt; json&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;dumps&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;deserialized&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#797593;font-style:italic&quot;&gt;    #&lt;/span&gt;&lt;span style=&quot;color:#9893A5;font-style:italic&quot;&gt; Check for round-tripping errors&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;    if&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt; serialized &lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;!=&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt; number_literal&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;:&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#B4637A;font-style:italic&quot;&gt;        print&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&quot;  Round-tripping error&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;    else&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;:&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#B4637A;font-style:italic&quot;&gt;        print&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&quot;  No round-tripping error&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#B4637A;font-style:italic&quot;&gt;    print&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;()&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#797593;font-style:italic&quot;&gt;#&lt;/span&gt;&lt;span style=&quot;color:#9893A5;font-style:italic&quot;&gt; Test the JSON number literals&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#575279&quot;&gt;test_json_number&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&quot;10&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#575279&quot;&gt;test_json_number&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&quot;1000000000&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#575279&quot;&gt;test_json_number&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&quot;10000000000000001&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#575279&quot;&gt;test_json_number&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&quot;100000000000000000001&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#575279&quot;&gt;test_json_number&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&quot;1&quot;&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; +&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt; &quot;0&quot;&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; *&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt; 4301&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#575279&quot;&gt;test_json_number&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&quot;10.0&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#575279&quot;&gt;test_json_number&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&quot;10000000000000001.1&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#575279&quot;&gt;test_json_number&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&quot;1.&quot;&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; +&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt; &quot;1&quot;&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; *&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt; 34&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#575279&quot;&gt;test_json_number&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&quot;1E2&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#575279&quot;&gt;test_json_number&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&quot;1E309&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&quot;java-jdk-21-jackson&quot; tabindex=&quot;-1&quot;&gt;Java (JDK 21, Jackson) &lt;a class=&quot;header-anchor&quot; href=&quot;https://blog.trl.sn/blog/what-is-a-json-number/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;pre class=&quot;shiki rose-pine-dawn&quot; style=&quot;background-color:#faf4ed;color:#575279&quot; tabindex=&quot;0&quot;&gt;&lt;code&gt;&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;import com&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;fasterxml&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;jackson&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;databind&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;JsonNode&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;import com&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;fasterxml&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;jackson&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;databind&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;ObjectMapper&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;public&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; class&lt;/span&gt;&lt;span style=&quot;color:#56949F&quot;&gt; NumberTest&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt; {&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;    private&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; static&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; final&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; String&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;[]&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; testCases&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; =&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt; {&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;        &quot;10&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;        &quot;1000000000&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;        &quot;10000000000000001&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;        &quot;100000000000000000000&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;        &quot;1&quot;&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; +&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt; &quot;0&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;repeat&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;309&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;),&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;        &quot;10.0&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;        &quot;10000000000000001.1&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;        &quot;1.1111111111111111111111111111111111&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;        &quot;1E2&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;        &quot;1E309&quot;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#797593&quot;&gt;    };&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;    public&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; static&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; void&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt; main&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;String&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;[]&lt;/span&gt;&lt;span style=&quot;color:#907AA9;font-style:italic&quot;&gt; args&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt; {&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;        ObjectMapper&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; objectMapper&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; =&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; new&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt; ObjectMapper&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;();&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;        for&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt; (&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;String&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; testCase&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; :&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt; testCases&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt; {&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;            System&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;out&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;println&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&quot;Testing JSON value: &quot;&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; +&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt; testCase&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;);&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;            try&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt; {&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#797593;font-style:italic&quot;&gt;                //&lt;/span&gt;&lt;span style=&quot;color:#9893A5;font-style:italic&quot;&gt; Parse the JSON value&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;                JsonNode&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; jsonNode&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; =&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; objectMapper&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;readTree&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;testCase&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;);&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#797593;font-style:italic&quot;&gt;                //&lt;/span&gt;&lt;span style=&quot;color:#9893A5;font-style:italic&quot;&gt; Check the deserialized type and precision loss&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;                if&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt; (&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;jsonNode&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;isInt&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;())&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt; {&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;                    System&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;out&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;println&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&quot;Deserialized as: int&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;);&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#797593&quot;&gt;                }&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; else&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; if&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt; (&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;jsonNode&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;isLong&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;())&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt; {&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;                    System&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;out&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;println&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&quot;Deserialized as: long&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;);&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#797593&quot;&gt;                }&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; else&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; if&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt; (&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;jsonNode&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;isBigInteger&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;())&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt; {&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;                    System&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;out&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;println&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&quot;Deserialized as: BigInteger&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;);&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;                    String&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; deserializedString&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; =&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; jsonNode&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;bigIntegerValue&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;().&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;toString&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;();&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;                    if&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt; (&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;!&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;deserializedString&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;equals&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;testCase&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;))&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt; {&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;                        System&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;out&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;println&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&quot;Precision loss detected!&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;);&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;                        System&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;out&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;println&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&quot;Original value: &quot;&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; +&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt; testCase&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;);&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;                        System&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;out&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;println&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&quot;Deserialized value: &quot;&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; +&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt; deserializedString&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;);&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#797593&quot;&gt;                    }&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#797593&quot;&gt;                }&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; else&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; if&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt; (&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;jsonNode&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;isDouble&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;())&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt; {&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;                    System&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;out&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;println&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&quot;Deserialized as: double&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;);&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;                    String&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; deserializedString&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; =&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; jsonNode&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;doubleValue&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;()&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; +&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt; &quot;&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;                    if&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt; (&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;!&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;deserializedString&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;equals&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;testCase&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;))&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt; {&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;                        System&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;out&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;println&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&quot;Precision loss detected!&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;);&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;                        System&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;out&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;println&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&quot;Original value: &quot;&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; +&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt; testCase&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;);&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;                        System&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;out&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;println&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&quot;Deserialized value: &quot;&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; +&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt; deserializedString&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;);&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#797593&quot;&gt;                    }&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#797593&quot;&gt;                }&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; else&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; if&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt; (&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;jsonNode&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;isDecimal&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;())&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt; {&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;                    System&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;out&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;println&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&quot;Deserialized as: BigDecimal&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;);&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;                    String&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; deserializedString&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; =&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; jsonNode&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;decimalValue&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;().&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;toString&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;();&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;                    if&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt; (&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;!&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;deserializedString&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;equals&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;testCase&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;))&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt; {&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;                        System&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;out&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;println&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&quot;Precision loss detected!&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;);&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;                        System&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;out&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;println&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&quot;Original value: &quot;&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; +&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt; testCase&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;);&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;                        System&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;out&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;println&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&quot;Deserialized value: &quot;&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; +&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt; deserializedString&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;);&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#797593&quot;&gt;                    }&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#797593&quot;&gt;                }&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; else&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt; {&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;                    System&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;out&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;println&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&quot;Deserialized as: &quot;&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; +&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; jsonNode&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;getNodeType&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;());&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#797593&quot;&gt;                }&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#797593;font-style:italic&quot;&gt;                //&lt;/span&gt;&lt;span style=&quot;color:#9893A5;font-style:italic&quot;&gt; Serialize the value back to JSON&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;                String&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; serialized&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; =&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; objectMapper&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;writeValueAsString&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;jsonNode&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;);&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#797593;font-style:italic&quot;&gt;                //&lt;/span&gt;&lt;span style=&quot;color:#9893A5;font-style:italic&quot;&gt; Check if the serialized value matches the original JSON value&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;                if&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt; (&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;!&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;serialized&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;equals&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;testCase&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;))&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt; {&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;                    System&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;out&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;println&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&quot;Round-tripping error detected!&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;);&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;                    System&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;out&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;println&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&quot;Original: &quot;&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; +&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt; testCase&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;);&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;                    System&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;out&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;println&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&quot;Serialized: &quot;&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; +&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt; serialized&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;);&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#797593&quot;&gt;                }&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#797593&quot;&gt;            }&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; catch&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt; (&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;Exception&lt;/span&gt;&lt;span style=&quot;color:#907AA9;font-style:italic&quot;&gt; e&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt; {&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;                System&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;out&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;println&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&quot;Deserialization error: &quot;&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; +&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; e&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;getMessage&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;());&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#797593&quot;&gt;            }&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;            System&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;out&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;println&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;();&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#797593&quot;&gt;        }&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#797593&quot;&gt;    }&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#797593&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&quot;rust&quot; tabindex=&quot;-1&quot;&gt;Rust &lt;a class=&quot;header-anchor&quot; href=&quot;https://blog.trl.sn/blog/what-is-a-json-number/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;pre class=&quot;shiki rose-pine-dawn&quot; style=&quot;background-color:#faf4ed;color:#575279&quot; tabindex=&quot;0&quot;&gt;&lt;code&gt;&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;use&lt;/span&gt;&lt;span style=&quot;color:#56949F&quot;&gt; serde_json&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;::&lt;/span&gt;&lt;span style=&quot;color:#56949F&quot;&gt;Value&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;fn&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt; main&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;()&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt; {&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;    let&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; json_values&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; =&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt; vec!&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;[&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;        &quot;10&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;        &quot;1000000000&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;        &quot;10000000000000001&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;        &quot;100000000000000000001&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;        &quot;1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;        &quot;10.0&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;        &quot;10000000000000001.1&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;        &quot;1.1111111111111111111111111111111111&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;        &quot;1E2&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;        &quot;1E309&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#797593&quot;&gt;    ];&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;    for&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; json_value&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; in&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; json_values&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt; {&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;        println!&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&quot;Testing JSON value: &lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;{}&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; json_value&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;);&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#797593;font-style:italic&quot;&gt;        //&lt;/span&gt;&lt;span style=&quot;color:#9893A5;font-style:italic&quot;&gt; Deserialize the JSON value&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;        let&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; deserialized&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color:#56949F&quot;&gt; Result&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;&amp;#x3C;&lt;/span&gt;&lt;span style=&quot;color:#56949F&quot;&gt;Value&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; _&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;&gt;&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; =&lt;/span&gt;&lt;span style=&quot;color:#56949F&quot;&gt; serde_json&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;::&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;from_str&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;json_value&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;);&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;        match&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; deserialized&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt; {&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#56949F&quot;&gt;            Ok&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;value&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; =&gt;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt; {&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#797593;font-style:italic&quot;&gt;                //&lt;/span&gt;&lt;span style=&quot;color:#9893A5;font-style:italic&quot;&gt; Check the deserialized type and precision loss&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;                match&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; &amp;#x26;&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;value&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt; {&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#56949F&quot;&gt;                    Value&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;::&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;Number&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;num&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; =&gt;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt; {&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;                        if&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; num&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;is_i64&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;()&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt; {&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;                            println!&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&quot;Deserialized as: i64&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;);&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#797593&quot;&gt;                        }&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; else&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; if&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; num&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;is_u64&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;()&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt; {&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;                            println!&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&quot;Deserialized as: u64&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;);&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#797593&quot;&gt;                        }&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; else&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; if&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; num&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;is_f64&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;()&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt; {&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;                            println!&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&quot;Deserialized as: f64&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;);&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;                            let&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; deserialized_value&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; =&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; num&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;as_f64&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;()&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;unwrap&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;()&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;to_string&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;();&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;                            if&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; deserialized_value&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; !=&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; json_value&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt; {&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;                                println!&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&quot;Precision loss detected!&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;);&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;                                println!&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&quot;Original value: &lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;{}&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; json_value&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;);&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;                                println!&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&quot;Deserialized value: &lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;{}&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; deserialized_value&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;);&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#797593&quot;&gt;                            }&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#797593&quot;&gt;                        }&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#797593&quot;&gt;                    }&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;                    _&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; =&gt;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt; {&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;                        println!&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&quot;Deserialized as: &lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;{&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;:?&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;}&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; value&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;);&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#797593&quot;&gt;                    }&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#797593&quot;&gt;                }&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#797593;font-style:italic&quot;&gt;                //&lt;/span&gt;&lt;span style=&quot;color:#9893A5;font-style:italic&quot;&gt; Serialize the value back to JSON&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;                let&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; serialized&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; =&lt;/span&gt;&lt;span style=&quot;color:#56949F&quot;&gt; serde_json&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;::&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;to_string&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;&amp;#x26;&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;value&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;unwrap&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;();&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#797593;font-style:italic&quot;&gt;                //&lt;/span&gt;&lt;span style=&quot;color:#9893A5;font-style:italic&quot;&gt; Check if the serialized value matches the original JSON value&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;                if&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; serialized&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; !=&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; json_value&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt; {&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;                    println!&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&quot;Round-tripping error detected!&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;);&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;                    println!&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&quot;Original: &lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;{}&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; json_value&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;);&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;                    println!&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&quot;Serialized: &lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;{}&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; serialized&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;);&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#797593&quot;&gt;                }&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#797593&quot;&gt;            }&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#56949F&quot;&gt;            Err&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;e&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; =&gt;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt; {&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;                println!&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&quot;Deserialization error: &lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;{}&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; e&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;);&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#797593&quot;&gt;            }&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#797593&quot;&gt;        }&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;        println!&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;();&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#797593&quot;&gt;    }&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#797593&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&quot;go-1&quot; tabindex=&quot;-1&quot;&gt;Go &lt;a class=&quot;header-anchor&quot; href=&quot;https://blog.trl.sn/blog/what-is-a-json-number/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;This code demonstrates the default behavior:&lt;/p&gt;
&lt;pre class=&quot;shiki rose-pine-dawn&quot; style=&quot;background-color:#faf4ed;color:#575279&quot; tabindex=&quot;0&quot;&gt;&lt;code&gt;&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;package&lt;/span&gt;&lt;span style=&quot;color:#56949F&quot;&gt; main&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;import&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt; (&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;	&quot;&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;encoding/json&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;	&quot;&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;fmt&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;	&quot;&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;strconv&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;	&quot;&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;strings&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#797593&quot;&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;func&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt; main&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;()&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt; {&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;	testCases&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; :=&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt; []&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;string&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;{&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;		&quot;10&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;		&quot;1000000000&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;		&quot;10000000000000001&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;		&quot;100000000000000000000&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;		&quot;1&quot;&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; +&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; strings&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;Repeat&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&quot;0&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt; 309&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;),&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;		&quot;10.0&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;		&quot;10000000000000001.1&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;		&quot;1.1111111111111111111111111111111111&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;		&quot;1E2&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;		&quot;1E309&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#797593&quot;&gt;	}&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;	for&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; _&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; testCase&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; :=&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; range&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; testCases&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt; {&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;		fmt&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;Printf&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&quot;Testing JSON value: &lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;%s&#92;n&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; testCase&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#797593;font-style:italic&quot;&gt;		//&lt;/span&gt;&lt;span style=&quot;color:#9893A5;font-style:italic&quot;&gt; Unmarshal the JSON value into a float64&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;		var&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; value&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; float64&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;		err&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; :=&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; json&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;Unmarshal&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;([]&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;byte&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;testCase&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;),&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; &amp;#x26;&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;value&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;		if&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; err&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; !=&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt; nil&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt; {&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;			fmt&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;Printf&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&quot;Deserialization error: &lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;%v&#92;n&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; err&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;			fmt&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;Println&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;()&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;			continue&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#797593&quot;&gt;		}&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;		fmt&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;Println&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&quot;Deserialized as: float64&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#797593;font-style:italic&quot;&gt;		//&lt;/span&gt;&lt;span style=&quot;color:#9893A5;font-style:italic&quot;&gt; Check for precision loss&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;		deserializedString&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; :=&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; strconv&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;FormatFloat&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;value&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt; &#39;&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;g&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&#39;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; -&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;1&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt; 64&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;		if&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; deserializedString&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; !=&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; testCase&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt; {&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;			fmt&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;Println&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&quot;Precision loss detected!&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;			fmt&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;Printf&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&quot;Original value: &lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;%s&#92;n&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; testCase&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;			fmt&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;Printf&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&quot;Deserialized value: &lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;%s&#92;n&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; deserializedString&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#797593&quot;&gt;		}&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#797593;font-style:italic&quot;&gt;		//&lt;/span&gt;&lt;span style=&quot;color:#9893A5;font-style:italic&quot;&gt; Serialize the value back to JSON&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;		serialized&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; err&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; :=&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; json&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;Marshal&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;value&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;		if&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; err&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; !=&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt; nil&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt; {&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;			fmt&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;Printf&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&quot;Serialization error: &lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;%v&#92;n&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; err&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;			fmt&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;Println&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;()&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;			continue&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#797593&quot;&gt;		}&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#797593;font-style:italic&quot;&gt;		//&lt;/span&gt;&lt;span style=&quot;color:#9893A5;font-style:italic&quot;&gt; Check if the serialized value matches the original JSON value&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;		if&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; string&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;serialized&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; !=&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; testCase&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt; {&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;			fmt&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;Println&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&quot;Round-tripping error detected!&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;			fmt&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;Printf&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&quot;Original: &lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;%s&#92;n&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; testCase&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;			fmt&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;Printf&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&quot;Serialized: &lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;%s&#92;n&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; string&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;serialized&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;))&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#797593&quot;&gt;		}&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;		fmt&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;Println&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;()&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#797593&quot;&gt;	}&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#797593&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This code demonstrates deserializing into a struct of a known shape:&lt;/p&gt;
&lt;pre class=&quot;shiki rose-pine-dawn&quot; style=&quot;background-color:#faf4ed;color:#575279&quot; tabindex=&quot;0&quot;&gt;&lt;code&gt;&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;package&lt;/span&gt;&lt;span style=&quot;color:#56949F&quot;&gt; main&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;import&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt; (&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;	&quot;&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;encoding/json&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;	&quot;&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;fmt&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;	&quot;&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;math/big&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;	&quot;&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;strconv&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;	&quot;&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;strings&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#797593&quot;&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;type&lt;/span&gt;&lt;span style=&quot;color:#56949F&quot;&gt; TestCase&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; struct&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt; {&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;	Name&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;  string&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;  `json:&quot;name&quot;`&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;	Int8&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;  int8&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;    `json:&quot;int8,omitempty&quot;`&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;	Int16&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; int16&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;   `json:&quot;int16,omitempty&quot;`&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;	Int32&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; int32&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;   `json:&quot;int32,omitempty&quot;`&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;	Int64&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; int64&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;   `json:&quot;int64,omitempty&quot;`&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;	Float&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; float64&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt; `json:&quot;float,omitempty&quot;`&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#797593&quot;&gt;}&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;func&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt; main&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;()&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt; {&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;	testCases&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; :=&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt; []&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;string&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;{&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;		`{&quot;name&quot;: &quot;Small integer&quot;, &quot;int8&quot;: 10}`&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;		`{&quot;name&quot;: &quot;Medium integer&quot;, &quot;int32&quot;: 1000000000}`&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;		`{&quot;name&quot;: &quot;Large integer&quot;, &quot;int64&quot;: 10000000000000001}`&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;		`{&quot;name&quot;: &quot;Huge integer&quot;, &quot;int64&quot;: 100000000000000000001}`&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;		`{&quot;name&quot;: &quot;Ridonculous integer&quot;, &quot;int64&quot;: 1`&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; +&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; strings&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;Repeat&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&quot;0&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt; 309&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; +&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt; `}`&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;		`{&quot;name&quot;: &quot;Low-precision decimal&quot;, &quot;float&quot;: 10.0}`&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;		`{&quot;name&quot;: &quot;High-precision decimal&quot;, &quot;float&quot;: 10000000000000001.1}`&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;		`{&quot;name&quot;: &quot;Ridonculous-precision decimal&quot;, &quot;float&quot;: 1.1111111111111111111111111111111111}`&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;		`{&quot;name&quot;: &quot;Small exponential&quot;, &quot;float&quot;: 1E2}`&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;		`{&quot;name&quot;: &quot;Large exponential&quot;, &quot;float&quot;: 1E309}`&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#797593&quot;&gt;	}&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;	for&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; _&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; testCase&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; :=&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; range&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; testCases&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt; {&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;		var&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; tc&lt;/span&gt;&lt;span style=&quot;color:#56949F&quot;&gt; TestCase&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;		err&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; :=&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; json&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;Unmarshal&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;([]&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;byte&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;testCase&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;),&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; &amp;#x26;&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;tc&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;		if&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; err&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; !=&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt; nil&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt; {&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;			fmt&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;Printf&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&quot;Deserialization error: &lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;%v&#92;n&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; err&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;			fmt&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;Println&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;()&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;			continue&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#797593&quot;&gt;		}&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;		fmt&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;Printf&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&quot;Testing: &lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;%s&#92;n&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; tc&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;Name&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#797593;font-style:italic&quot;&gt;		//&lt;/span&gt;&lt;span style=&quot;color:#9893A5;font-style:italic&quot;&gt; Check the deserialized type and precision loss&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;		switch&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt; {&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;		case&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; tc&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;Int8&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; !=&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt; 0&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;:&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;			fmt&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;Println&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&quot;Deserialized as: int8&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;		case&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; tc&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;Int16&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; !=&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt; 0&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;:&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;			fmt&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;Println&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&quot;Deserialized as: int16&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;		case&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; tc&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;Int32&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; !=&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt; 0&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;:&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;			fmt&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;Println&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&quot;Deserialized as: int32&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;		case&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; tc&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;Int64&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; !=&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt; 0&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;:&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;			fmt&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;Println&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&quot;Deserialized as: int64&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;			if&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; tc&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;Name&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; ==&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt; &quot;Ridonculous integer&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt; {&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;				bigInt&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; :=&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt; new&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#56949F&quot;&gt;big&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#56949F&quot;&gt;Int&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;				bigInt&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;SetString&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;strconv&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;FormatInt&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;tc&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;Int64&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt; 10&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;),&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt; 10&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;				if&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; bigInt&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;String&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;()&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; !=&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; strconv&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;FormatInt&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;tc&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;Int64&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt; 10&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt; {&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;					fmt&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;Println&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&quot;Precision loss detected!&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;					fmt&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;Printf&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&quot;Original value: &lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;%s&#92;n&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; strconv&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;FormatInt&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;tc&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;Int64&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt; 10&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;))&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;					fmt&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;Printf&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&quot;Deserialized value: &lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;%s&#92;n&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; bigInt&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;String&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;())&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#797593&quot;&gt;				}&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#797593&quot;&gt;			}&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;		default&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;:&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;			fmt&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;Println&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&quot;Deserialized as: float64&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;			deserializedString&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; :=&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; strconv&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;FormatFloat&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;tc&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;Float&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt; &#39;&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;g&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&#39;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; -&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;1&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt; 64&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;			if&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; deserializedString&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; !=&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; strconv&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;FormatFloat&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;tc&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;Float&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt; &#39;&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;f&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&#39;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; -&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;1&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt; 64&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt; {&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;				fmt&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;Println&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&quot;Precision loss detected!&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;				fmt&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;Printf&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&quot;Original value: &lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;%s&#92;n&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; strconv&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;FormatFloat&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;tc&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;Float&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt; &#39;&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;f&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&#39;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; -&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;1&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt; 64&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;))&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;				fmt&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;Printf&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&quot;Deserialized value: &lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;%s&#92;n&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; deserializedString&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#797593&quot;&gt;			}&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#797593&quot;&gt;		}&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#797593;font-style:italic&quot;&gt;		//&lt;/span&gt;&lt;span style=&quot;color:#9893A5;font-style:italic&quot;&gt; Serialize the value back to JSON&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;		serialized&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; err&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; :=&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; json&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;Marshal&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;tc&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;		if&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; err&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; !=&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt; nil&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt; {&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;			fmt&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;Printf&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&quot;Serialization error: &lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;%v&#92;n&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; err&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;			fmt&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;Println&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;()&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;			continue&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#797593&quot;&gt;		}&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#797593;font-style:italic&quot;&gt;		//&lt;/span&gt;&lt;span style=&quot;color:#9893A5;font-style:italic&quot;&gt; Check if the serialized value matches the original JSON value&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;		var&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; originalTC&lt;/span&gt;&lt;span style=&quot;color:#56949F&quot;&gt; TestCase&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;		json&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;Unmarshal&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;([]&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;byte&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;testCase&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;),&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; &amp;#x26;&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;originalTC&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;		var&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; serializedTC&lt;/span&gt;&lt;span style=&quot;color:#56949F&quot;&gt; TestCase&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;		json&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;Unmarshal&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;serialized&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; &amp;#x26;&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;serializedTC&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;		if&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; originalTC&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; !=&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; serializedTC&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt; {&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;			fmt&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;Println&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&quot;Round-tripping error detected!&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;			fmt&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;Printf&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&quot;Original: &lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;%+v&#92;n&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; originalTC&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;			fmt&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;Printf&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&quot;Serialized: &lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;%+v&#92;n&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; serializedTC&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#797593&quot;&gt;		}&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;		fmt&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;Println&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;()&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#797593&quot;&gt;	}&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#797593&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;hr class=&quot;footnotes-sep&quot;&gt;
&lt;section class=&quot;footnotes&quot;&gt;
&lt;ol class=&quot;footnotes-list&quot;&gt;
&lt;li id=&quot;fn1&quot; class=&quot;footnote-item&quot;&gt;&lt;p&gt;This additional restriction might seem to violate ECMA-404 at first glance, but it&#39;s really just acknowledging the reality that implementations are free to set such limits. If this weren&#39;t the case, no JSON parser could be standards compliant since they have to run in reality where hardware and software constraints exist. &lt;a href=&quot;https://blog.trl.sn/blog/what-is-a-json-number/&quot; class=&quot;footnote-backref&quot;&gt;â†©ï¸Ž&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&quot;fn2&quot; class=&quot;footnote-item&quot;&gt;&lt;p&gt;This limit used to be much higher, but it was found to be a DoS vector, so more recent versions of python limited the string length of an &lt;code&gt;int&lt;/code&gt; to a paltry 4300 digits. This can be configured to a more reasonable value by calling &lt;code&gt;sys.set_int_max_str_digits&lt;/code&gt; or setting the &lt;code&gt;PYTHONINTMAXSTRDIGITS&lt;/code&gt; environment variable. &lt;a href=&quot;https://blog.trl.sn/blog/what-is-a-json-number/&quot; class=&quot;footnote-backref&quot;&gt;â†©ï¸Ž&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&quot;fn3&quot; class=&quot;footnote-item&quot;&gt;&lt;p&gt;The &lt;a href=&quot;https://typespec.io&quot;&gt;TypeSpec&lt;/a&gt; team proposed adding double-int to the format registry to represent an integer that can fit as a double, which would eventually serve as the output target for &lt;code&gt;safeint&lt;/code&gt;. For reasons of compatibility with the current ecosystem, TypeSpec continues to emit &lt;code&gt;safeint&lt;/code&gt; with the &lt;code&gt;int64&lt;/code&gt; format. &lt;a href=&quot;https://blog.trl.sn/blog/what-is-a-json-number/&quot; class=&quot;footnote-backref&quot;&gt;â†©ï¸Ž&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&quot;fn4&quot; class=&quot;footnote-item&quot;&gt;&lt;p&gt;This likely explains my observation that folks don&#39;t tend to worry much when putting an &lt;code&gt;int64&lt;/code&gt; on the wire. Poor JavaScript :( &lt;a href=&quot;https://blog.trl.sn/blog/what-is-a-json-number/&quot; class=&quot;footnote-backref&quot;&gt;â†©ï¸Ž&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/section&gt;
</content>
	</entry>
	
	<entry>
		<title>Write OpenAPI with TypeSpec</title>
		<link href="https://blog.trl.sn/blog/typespec-for-openapi/"/>
		<updated>2024-03-25T00:00:00Z</updated>
		<id>https://blog.trl.sn/blog/typespec-for-openapi/</id>
		<content type="html">&lt;p&gt;I&#39;ve spent the last few years at Microsoft working on an API definition language called &lt;a href=&quot;https://typespec.io&quot;&gt;TypeSpec&lt;/a&gt;. It&#39;s essentially a super flexible protocol-agnostic DSL for describing API shapes. You can try it in your browser at the &lt;a href=&quot;https://typespec.io/playground&quot;&gt;TypeSpec playground&lt;/a&gt;. Many things about it are exciting, but I want to talk about one thing in particular: why TypeSpec is the best way to write OpenAPI.&lt;/p&gt;
&lt;h2 id=&quot;openapi-the-good-and-the-not-so-good&quot; tabindex=&quot;-1&quot;&gt;OpenAPI: the good and the not-so-good &lt;a class=&quot;header-anchor&quot; href=&quot;https://blog.trl.sn/blog/typespec-for-openapi/&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;OpenAPI is pretty great at describing the low level details of how an HTTP API works. It allows software to understand the shape of an API which in turn enables myriad useful things, like generating clients and documentation, configuring API gateways, or generating test cases. The fact that OpenAPI is the most widely used language to describe HTTP APIs is a testament to these strengths.&lt;/p&gt;
&lt;p&gt;However, after working with OpenAPI inside Azure, it is also clear to me that OpenAPI suffers a few critical weaknesses. Humans don&#39;t find OpenAPI particularly pleasant to author and review, whether in JSON or YAML. The code generation from OpenAPI is often not stellar despite heroic efforts from many in the community&lt;sup class=&quot;footnote-ref&quot;&gt;&lt;a href=&quot;https://blog.trl.sn/blog/typespec-for-openapi/&quot; id=&quot;fnref1&quot;&gt;[1]&lt;/a&gt;&lt;/sup&gt;. It also struggles when building APIs at scale where its verbosity and lack of reusable components require significant investment in API reviews and governance process.&lt;/p&gt;
&lt;p&gt;I believe API-first development principles&lt;sup class=&quot;footnote-ref&quot;&gt;&lt;a href=&quot;https://blog.trl.sn/blog/typespec-for-openapi/&quot; id=&quot;fnref2&quot;&gt;[2]&lt;/a&gt;&lt;/sup&gt; are great in theory, but in practice API-first with OpenAPI faces significant headwinds. Developers are likely to opt for code-first approaches that generate OpenAPI as a build artifact. I believe TypeSpec changes the game. Let&#39;s see how!&lt;/p&gt;
&lt;h2 id=&quot;enter-typespec&quot; tabindex=&quot;-1&quot;&gt;Enter TypeSpec &lt;a class=&quot;header-anchor&quot; href=&quot;https://blog.trl.sn/blog/typespec-for-openapi/&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;TypeSpec is designed to be protocol agonstic, but the team has invested heavily in making great OpenAPI 3.0 emit. You can use TypeSpec to define most OpenAPI documents&lt;sup class=&quot;footnote-ref&quot;&gt;&lt;a href=&quot;https://blog.trl.sn/blog/typespec-for-openapi/&quot; id=&quot;fnref3&quot;&gt;[3]&lt;/a&gt;&lt;/sup&gt; by using its &lt;code&gt;http&lt;/code&gt; standard library which provides various types and decorators to add http-specific metadata like headers, query strings, or status codes. Writing OpenAPI in TypeSpec has many advantages over using OpenAPI directly. What I&#39;ll cover today is that TypeSpecs are smaller, more readable, and can use API components.&lt;/p&gt;
&lt;h3 id=&quot;terse-and-expressive&quot; tabindex=&quot;-1&quot;&gt;Terse &amp;amp; expressive &lt;a class=&quot;header-anchor&quot; href=&quot;https://blog.trl.sn/blog/typespec-for-openapi/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;TypeSpec&#39;s syntax and semantics borrow heavily from TypeScript, which is one of the best languages for describing REST API shapes&lt;sup class=&quot;footnote-ref&quot;&gt;&lt;a href=&quot;https://blog.trl.sn/blog/typespec-for-openapi/&quot; id=&quot;fnref4&quot;&gt;[4]&lt;/a&gt;&lt;/sup&gt;. TypeSpec is able to describe complex model shapes and REST endpoints with substantially less typing than OpenAPI, and the end result is much more readable. I&#39;ve even heard from folks who successfully use TypeSpec syntax to discuss API shapes with non-technical stakeholders!&lt;/p&gt;
&lt;p&gt;Let&#39;s look at an example of what I mean. You can view the resulting OpenAPI &lt;a href=&quot;https://typespec.io/playground?c=aW1wb3J0ICJAdHlwZXNwZWMvaHR0cCI7DQp1c2luZyBIdHRwOw0KDQovKiogQSBjaGFyYWN0ZXIgaW4gYSBmYW50YXN5IFJQRy1zdHlsZSBnYW1lICovDQptb2RlbCBDyTB7DQogIG5hbWU6IHN0cmluZzvEEWlkOiBzYWZlaW50xRBzdGF0dXM6ICJBbGl2ZSIgfCAiRGVhZOQAkCAgY2xhc3M6IEPEBzsNCn3kAJdlbnVtxhIgeyB3YXJyaW9yOyB3aXphcmQ7IMUjQG1pblZhbHVlKDEpxA5heMYOMjApDQpzY2FsYXLFeMUWIGV4dGVuZHMgdWludDjlAPrmAMpTdGF0c%2BYAxnN0cmVuZ3Ro5ADKxzfmAM1udGVsbGlnZW5j5QDmzBxkxFhyaXR5zhnlAKFvcCBnZXTpASsoQHBhdGjsARspOuoBSTs%3D&amp;amp;e=%40typespec%2Fopenapi3&amp;amp;options=%7B%7D&quot;&gt;in the playground&lt;/a&gt;.&lt;/p&gt;
&lt;figure&gt;
&lt;pre class=&quot;shiki rose-pine-dawn&quot; style=&quot;background-color:#faf4ed;color:#575279&quot; tabindex=&quot;0&quot;&gt;&lt;code&gt;&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;import&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt; &quot;@typespec/http&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;using&lt;/span&gt;&lt;span style=&quot;color:#56949F&quot;&gt; Http&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#9893A5;font-style:italic&quot;&gt;/** A character in a fantasy RPG-style game */&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;model&lt;/span&gt;&lt;span style=&quot;color:#56949F&quot;&gt; Character&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt; {&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#D7827E;font-style:italic&quot;&gt;  name&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color:#56949F&quot;&gt; string&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#D7827E;font-style:italic&quot;&gt;  id&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color:#56949F&quot;&gt; safeint&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#D7827E;font-style:italic&quot;&gt;  status&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt; &quot;Alive&quot;&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt; | &lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&quot;Dead&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#D7827E;font-style:italic&quot;&gt;  class&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color:#56949F&quot;&gt; Class&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#797593&quot;&gt;}&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;enum&lt;/span&gt;&lt;span style=&quot;color:#56949F&quot;&gt; Class&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt; {&lt;/span&gt;&lt;span style=&quot;color:#D7827E;font-style:italic&quot;&gt; warrior&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;;&lt;/span&gt;&lt;span style=&quot;color:#D7827E;font-style:italic&quot;&gt; wizard&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt; }&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#56949F&quot;&gt;@minValue&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;1&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#56949F&quot;&gt;@maxValue&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;20&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;scalar&lt;/span&gt;&lt;span style=&quot;color:#56949F&quot;&gt; statValue&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; extends&lt;/span&gt;&lt;span style=&quot;color:#56949F&quot;&gt; uint8&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;model&lt;/span&gt;&lt;span style=&quot;color:#56949F&quot;&gt; Stats&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt; {&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#D7827E;font-style:italic&quot;&gt;  strength&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color:#56949F&quot;&gt; statValue&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#D7827E;font-style:italic&quot;&gt;  intelligence&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color:#56949F&quot;&gt; statValue&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#D7827E;font-style:italic&quot;&gt;  dexterity&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color:#56949F&quot;&gt; statValue&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#797593&quot;&gt;}&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;op&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt; getCharacter&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#56949F&quot;&gt;@path&lt;/span&gt;&lt;span style=&quot;color:#D7827E;font-style:italic&quot;&gt; id&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color:#56949F&quot;&gt; safeint&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color:#56949F&quot;&gt; Character&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;figcaption&gt;A partial TypeSpec API definition for a fantasy RPG&lt;/figcaption&gt;&lt;/figure&gt;
&lt;p&gt;This TypeSpec ultimately compiles to OpenAPI that is almost 3x the number of lines, and 3.5x as many bytes. The TypeSpec code is fairly easy to read and followâ€”certainly familiar to TypeScript developers, but also obvious enough that anyone can get the gist.&lt;/p&gt;
&lt;p&gt;TypeSpec unions in particular demonstrate how TypeSpec&#39;s syntax significantly improves readability. Unions provide a single terse syntax that compile to OpenAPI&#39;s &lt;code&gt;oneOf&lt;/code&gt;, &lt;code&gt;anyOf&lt;/code&gt;, and &lt;code&gt;enum&lt;/code&gt; constructs. Consider the following TypeSpec and OpenAPI:&lt;/p&gt;
&lt;figure&gt;
&lt;pre class=&quot;shiki rose-pine-dawn&quot; style=&quot;background-color:#faf4ed;color:#575279&quot; tabindex=&quot;0&quot;&gt;&lt;code&gt;&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;model&lt;/span&gt;&lt;span style=&quot;color:#56949F&quot;&gt; Character&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt; {&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#9893A5;font-style:italic&quot;&gt;  // ... snip other fields ...&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#D7827E;font-style:italic&quot;&gt;  status&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt; &quot;Alive&quot;&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt; | &lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&quot;Dead&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#797593&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;figcaption&gt;A TypeSpec union of literal types&lt;/figcaption&gt;&lt;/figure&gt;
&lt;figure&gt;
&lt;pre class=&quot;shiki rose-pine-dawn&quot; style=&quot;background-color:#faf4ed;color:#575279&quot; tabindex=&quot;0&quot;&gt;&lt;code&gt;&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#56949F&quot;&gt;status&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;:&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#56949F&quot;&gt;  type&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt; string&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#56949F&quot;&gt;  enum&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;:&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#797593&quot;&gt;    -&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt; Alive&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#797593&quot;&gt;    -&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt; Dead&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;figcaption&gt;OpenAPI output for a union of literal types&lt;/figcaption&gt;&lt;/figure&gt;
&lt;p&gt;The compiler determined that this was a union of literal types and so the right choice was to emit it as an enum. But if we have a union of object types, it compiles into an anyOf&lt;sup class=&quot;footnote-ref&quot;&gt;&lt;a href=&quot;https://blog.trl.sn/blog/typespec-for-openapi/&quot; id=&quot;fnref5&quot;&gt;[5]&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;
&lt;figure&gt;
&lt;pre class=&quot;shiki rose-pine-dawn&quot; style=&quot;background-color:#faf4ed;color:#575279&quot; tabindex=&quot;0&quot;&gt;&lt;code&gt;&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;model&lt;/span&gt;&lt;span style=&quot;color:#56949F&quot;&gt; Character&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt; {&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#9893A5;font-style:italic&quot;&gt;  // ... snip other fields ...&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#D7827E;font-style:italic&quot;&gt;  items&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt; (&lt;/span&gt;&lt;span style=&quot;color:#56949F&quot;&gt;Weapon&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt; | &lt;/span&gt;&lt;span style=&quot;color:#56949F&quot;&gt;Armor&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt; | &lt;/span&gt;&lt;span style=&quot;color:#56949F&quot;&gt;GenericItem&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;)[]&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#797593&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;figcaption&gt;A TypeSpec union of objects&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;figure&gt;
&lt;pre class=&quot;shiki rose-pine-dawn&quot; style=&quot;background-color:#faf4ed;color:#575279&quot; tabindex=&quot;0&quot;&gt;&lt;code&gt;&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#56949F&quot;&gt;items&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;:&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#56949F&quot;&gt;  type&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt; array&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#56949F&quot;&gt;  items&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;:&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#56949F&quot;&gt;    anyOf&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;:&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#797593&quot;&gt;      -&lt;/span&gt;&lt;span style=&quot;color:#56949F&quot;&gt; $ref&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt; &quot;#/components/schemas/Weapon&quot;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#797593&quot;&gt;      -&lt;/span&gt;&lt;span style=&quot;color:#56949F&quot;&gt; $ref&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt; &quot;#/components/schemas/Armor&quot;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#797593&quot;&gt;      -&lt;/span&gt;&lt;span style=&quot;color:#56949F&quot;&gt; $ref&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt; &quot;#/components/schemas/GenericItem&quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;figcaption&gt;OpenAPI output for a union of objects&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;Overall, TypeSpec&#39;s various language features compile to OpenAPI that is generally longer and more complex, both in terms of syntax and semantics.&lt;/p&gt;
&lt;h3 id=&quot;composable-and-modular&quot; tabindex=&quot;-1&quot;&gt;Composable &amp;amp; modular &lt;a class=&quot;header-anchor&quot; href=&quot;https://blog.trl.sn/blog/typespec-for-openapi/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The ability to encapsulate API patterns into reusable components was one of the main reasons why we started working on TypeSpec in the first place. At scale, consistency across APIs and conformance with API guidelines becomes quite costly. Monumental effort is required from both API authors and API reviewers to ensure quality.&lt;/p&gt;
&lt;p&gt;TypeSpec&#39;s API components make consistency easy. API designers can encapsulate blessed API patterns into components that API authors import and use. In this way, API designers are assured that the API is correct simply by virtue of using the component, and API authors don&#39;t need to implement complex high-level patterns in JSON.&lt;/p&gt;
&lt;p&gt;A common example is pagination&lt;sup class=&quot;footnote-ref&quot;&gt;&lt;a href=&quot;https://blog.trl.sn/blog/typespec-for-openapi/&quot; id=&quot;fnref6&quot;&gt;[6]&lt;/a&gt;&lt;/sup&gt;. Using TypeSpec, we can define a template that defines the shape of our page, and use that for every paged endpoint.&lt;/p&gt;
&lt;figure&gt;
&lt;pre class=&quot;shiki rose-pine-dawn&quot; style=&quot;background-color:#faf4ed;color:#575279&quot; tabindex=&quot;0&quot;&gt;&lt;code&gt;&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;model&lt;/span&gt;&lt;span style=&quot;color:#56949F&quot;&gt; Page&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;&amp;#x3C;&lt;/span&gt;&lt;span style=&quot;color:#56949F&quot;&gt;T&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;&gt;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt; {&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#D7827E;font-style:italic&quot;&gt;  items&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color:#56949F&quot;&gt; T&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;[];&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#D7827E;font-style:italic&quot;&gt;  size&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color:#56949F&quot;&gt; int32&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#D7827E;font-style:italic&quot;&gt;  nextLink&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color:#56949F&quot;&gt; url&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#D7827E;font-style:italic&quot;&gt;  prevLink&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color:#56949F&quot;&gt; url&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#797593&quot;&gt;}&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#56949F&quot;&gt;@route&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&quot;/characters&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;op&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt; listCharacters&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;()&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color:#56949F&quot;&gt; Page&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;&amp;#x3C;&lt;/span&gt;&lt;span style=&quot;color:#56949F&quot;&gt;Character&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#56949F&quot;&gt;@route&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&quot;/items&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;op&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt; listItems&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;()&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color:#56949F&quot;&gt; Page&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;&amp;#x3C;&lt;/span&gt;&lt;span style=&quot;color:#56949F&quot;&gt;Item&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;figcaption&gt;A TypeSpec for paginated endpoints&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;Another common use for templates is defining your standard error shapes. For example, if every endpoint might return a &lt;code&gt;403&lt;/code&gt; error, we can express that with a template:&lt;/p&gt;
&lt;figure&gt;
&lt;pre class=&quot;shiki rose-pine-dawn&quot; style=&quot;background-color:#faf4ed;color:#575279&quot; tabindex=&quot;0&quot;&gt;&lt;code&gt;&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;alias&lt;/span&gt;&lt;span style=&quot;color:#56949F&quot;&gt; WithStandardErrors&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;&amp;#x3C;&lt;/span&gt;&lt;span style=&quot;color:#56949F&quot;&gt;T&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;&gt;&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; =&lt;/span&gt;&lt;span style=&quot;color:#56949F&quot;&gt; T&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt; | &lt;/span&gt;&lt;span style=&quot;color:#56949F&quot;&gt;ForbiddenResponse&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#56949F&quot;&gt;@route&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&quot;/characters&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;op&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt; listCharacters&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;()&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color:#56949F&quot;&gt; WithStandardErrors&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;&amp;#x3C;&lt;/span&gt;&lt;span style=&quot;color:#56949F&quot;&gt;Page&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;&amp;#x3C;&lt;/span&gt;&lt;span style=&quot;color:#56949F&quot;&gt;Character&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;&gt;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#56949F&quot;&gt;@route&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&quot;/items&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;op&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt; listItems&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;()&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color:#56949F&quot;&gt; WithStandardErrors&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;&amp;#x3C;&lt;/span&gt;&lt;span style=&quot;color:#56949F&quot;&gt;Page&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;&amp;#x3C;&lt;/span&gt;&lt;span style=&quot;color:#56949F&quot;&gt;Item&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;&gt;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;figcaption&gt;A TypeSpec for standard response shapes&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;In Azure, we have dozens of these templates, which encapsulate the API patterns we use across Azure&#39;s API surface area. We package these templates into modules that are imported by service owners when they&#39;re writing their API spec. They don&#39;t need to know that a &amp;quot;long-running operation&amp;quot; uses a particular HTTP verb with a payload of a specific shape, they just provide the long-running operation template a couple parameters specific to their API and they&#39;re done. API authors are happy, reviewers are happy.&lt;/p&gt;
&lt;h2 id=&quot;wrapping-up&quot; tabindex=&quot;-1&quot;&gt;Wrapping up &lt;a class=&quot;header-anchor&quot; href=&quot;https://blog.trl.sn/blog/typespec-for-openapi/&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;This just scratches the surface of what it&#39;s possible to do with TypeSpec. There are many other features that combine to make TypeSpec extremely productive to use, producing OpenAPI documents that can be well over 10x the size. When writing APIs is this productive, I think API-first starts to look not only viable, but attractive.&lt;/p&gt;
&lt;p&gt;In later posts, I&#39;ll be sharing some more details about fun things TypeSpec can do. Topics may include its support for other protocols (e.g. Protobuf, JSON Schema), TypeSpec&#39;s extensibility model and how you can add your own decorators or emit your own output using TypeScript, how TypeSpec enables higher quality code generation, and future directions around pagination and support for streaming APIs. If you&#39;re interested in a particular topic, feel free to say so on &lt;a href=&quot;https://twitter.com/bterlson&quot;&gt;twitter&lt;/a&gt;.&lt;/p&gt;
&lt;hr class=&quot;footnotes-sep&quot;&gt;
&lt;section class=&quot;footnotes&quot;&gt;
&lt;ol class=&quot;footnotes-list&quot;&gt;
&lt;li id=&quot;fn1&quot; class=&quot;footnote-item&quot;&gt;&lt;p&gt;OpenAPI doesn&#39;t make it easy to generate good code. JSON Schema is a great vocabulary for generating data validators but not great at driving high quality codegen. Microsoft&#39;s attempts to get good codegen from OpenAPI involved &lt;a href=&quot;http://azure.github.io/autorest/extensions/&quot;&gt;a number of proprietary extensions&lt;/a&gt;. &lt;a href=&quot;https://blog.trl.sn/blog/typespec-for-openapi/&quot; class=&quot;footnote-backref&quot;&gt;â†©ï¸Ž&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&quot;fn2&quot; class=&quot;footnote-item&quot;&gt;&lt;p&gt;API first refers to the practice of building your API specification up front, before any code is written, ensuring the API meets business requirements before committing to code and, in theory, resulting in improved consistency, reusability, and faster development time. &lt;a href=&quot;https://blog.trl.sn/blog/typespec-for-openapi/&quot; class=&quot;footnote-backref&quot;&gt;â†©ï¸Ž&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&quot;fn3&quot; class=&quot;footnote-item&quot;&gt;&lt;p&gt;Some lesser-used features are not supported, like callbacks, but we&#39;re working on them. Some more-often-used features are also not supported, but we are working on them as we speak, like examples and xml. &lt;a href=&quot;https://blog.trl.sn/blog/typespec-for-openapi/&quot; class=&quot;footnote-backref&quot;&gt;â†©ï¸Ž&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&quot;fn4&quot; class=&quot;footnote-item&quot;&gt;&lt;p&gt;This shouldn&#39;t be a surprise - TypeScript is a superset of JavaScript, aka the J in JSON. &lt;a href=&quot;https://blog.trl.sn/blog/typespec-for-openapi/&quot; class=&quot;footnote-backref&quot;&gt;â†©ï¸Ž&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&quot;fn5&quot; class=&quot;footnote-item&quot;&gt;&lt;p&gt;OpenAPI afficianados will likely question this choice. Much discussion was had about whether oneOf or anyOf would be most appropriate here. Ultimately my opinion is it doesn&#39;t matter so much, in practice the ecosystem seems to treat both &lt;code&gt;anyOf&lt;/code&gt; and &lt;code&gt;allOf&lt;/code&gt; as the same thing. If you need the other choice, you can use the &lt;code&gt;@oneOf&lt;/code&gt; decorator from the &lt;code&gt;@typespec/openapi&lt;/code&gt; package. &lt;a href=&quot;https://blog.trl.sn/blog/typespec-for-openapi/&quot; class=&quot;footnote-backref&quot;&gt;â†©ï¸Ž&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&quot;fn6&quot; class=&quot;footnote-item&quot;&gt;&lt;p&gt;Pagination is an area that TypeSpec has some additional work to do. While OpenAPI doesn&#39;t have the ability to explicitly define paginated endpoints, I believe clients should know that an endpoint is paginated so it can expose a friendlier interface to iterate over all the items in the collection. &lt;a href=&quot;https://blog.trl.sn/blog/typespec-for-openapi/&quot; class=&quot;footnote-backref&quot;&gt;â†©ï¸Ž&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/section&gt;
</content>
	</entry>
</feed>
